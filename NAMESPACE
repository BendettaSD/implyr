# Generated by roxygen2: do not edit by hand


if (utils::packageVersion("dplyr") == "0.5.0") {
  S3method(src_desc,src_impala)
  importFrom(dplyr,src_desc)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  S3method(db_desc,impala_connection)
  importFrom(dplyr,db_desc)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,base_agg)
  importFrom(dbplyr,base_scalar)
  importFrom(dbplyr,base_win)
  importFrom(dbplyr,build_sql)
  importFrom(dbplyr,sql)
  importFrom(dbplyr,sql_prefix)
  importFrom(dbplyr,sql_translator)
  importFrom(dbplyr,sql_variant)
} else {
  importFrom(dplyr,base_agg)
  importFrom(dplyr,base_scalar)
  importFrom(dplyr,base_win)
  importFrom(dplyr,build_sql)
  importFrom(dplyr,sql)
  importFrom(dplyr,sql_prefix)
  importFrom(dplyr,sql_translator)
  importFrom(dplyr,sql_variant)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,build_sql)
  importFrom(dbplyr,ident)
  importFrom(dbplyr,is.ident)
  importFrom(dbplyr,sql)
} else {
  importFrom(dplyr,build_sql)
  importFrom(dplyr,ident)
  importFrom(dplyr,is.ident)
  importFrom(dplyr,sql)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,escape)
  importFrom(dbplyr,ident)
  importFrom(dbplyr,sql_vector)
} else {
  importFrom(dplyr,escape)
  importFrom(dplyr,ident)
  importFrom(dplyr,sql_vector)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,escape)
} else {
  importFrom(dplyr,escape)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,ident)
} else {
  importFrom(dplyr,ident)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,sql_render)
  importFrom(dbplyr,op_vars)
} else {
  importFrom(dplyr,sql_render)
  importFrom(dplyr,op_vars)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,src_sql)
} else {
  importFrom(dplyr,src_sql)
}

if (utils::packageVersion("dplyr") > "0.5.0") {
  importFrom(dbplyr,tbl_sql)
} else {
  importFrom(dplyr,tbl_sql)
}
S3method(collapse,tbl_impala)
S3method(collect,tbl_impala)
S3method(compute,tbl_impala)
S3method(copy_to,src_impala)
S3method(db_analyze,impala_connection)
S3method(db_begin,impala_connection)
S3method(db_commit,impala_connection)
S3method(db_create_table,impala_connection)
S3method(db_data_type,impala_connection)
S3method(db_drop_table,impala_connection)
S3method(db_insert_into,impala_connection)
S3method(db_save_query,impala_connection)
S3method(intersect,tbl_impala)
S3method(setdiff,tbl_impala)
S3method(sql_escape_ident,impala_connection)
S3method(sql_escape_string,impala_connection)
S3method(sql_subquery,impala_connection)
S3method(sql_translate_env,impala_connection)
S3method(tbl,src_impala)
export()
export(src_impala)
exportMethods(dbDisconnect)
exportMethods(dbExecute)
exportMethods(dbGetQuery)
importFrom(DBI,dbConnect)
importFrom(DBI,dbDisconnect)
importFrom(DBI,dbExecute)
importFrom(DBI,dbGetInfo)
importFrom(DBI,dbGetQuery)
importFrom(DBI,dbSendQuery)
importFrom(assertthat,assert_that)
importFrom(assertthat,is.flag)
importFrom(assertthat,is.string)
importFrom(dplyr,"%>%")
importFrom(dplyr,collapse)
importFrom(dplyr,collect)
importFrom(dplyr,compute)
importFrom(dplyr,copy_to)
importFrom(dplyr,db_analyze)
importFrom(dplyr,db_begin)
importFrom(dplyr,db_commit)
importFrom(dplyr,db_create_table)
importFrom(dplyr,db_data_type)
importFrom(dplyr,db_drop_table)
importFrom(dplyr,db_insert_into)
importFrom(dplyr,db_save_query)
importFrom(dplyr,group_by_)
importFrom(dplyr,groups)
importFrom(dplyr,intersect)
importFrom(dplyr,select_)
importFrom(dplyr,setdiff)
importFrom(dplyr,sql_escape_ident)
importFrom(dplyr,sql_escape_string)
importFrom(dplyr,sql_subquery)
importFrom(dplyr,sql_translate_env)
importFrom(dplyr,tbl)
importFrom(methods,callNextMethod)
importFrom(methods,existsMethod)
importFrom(methods,getClass)
importFrom(methods,isClass)
importFrom(methods,removeClass)
importFrom(methods,removeMethod)
importFrom(methods,setClass)
importFrom(methods,setMethod)
importFrom(methods,setOldClass)
importFrom(stats,setNames)
importFrom(utils,getFromNamespace)
